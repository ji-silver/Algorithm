function solution(n) {
    
    // 동적 계획법으로 풀기
    const dp = new Array(n + 1).fill(0); // 인덱스 0부터 n까지 0으로 채우기
    
    // 초기에 한칸 또는 두칸을 뛸 수 있기 때문에 한칸에 1, 두칸에 2
    dp[1] = 1;
    dp[2] = 2;

    // dp[1], dp[2]는 이미 설정, 3부터 n까지 반복
    for (let i = 3; i <= n; i++) {
        
        // 한칸 또는 두칸만 뛸 수 있는 경우의 수를 더한 값을 1234567로 나눈 나머지값 저장
        dp[i] = (dp[i - 1] + dp[i - 2]) % 1234567;
    }

    return dp[n];
}
